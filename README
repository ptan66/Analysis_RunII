notes for 76x release


git cms-merge-topic -u matteosan1:smearer_76X
git clone https://github.com/ptan66/Analysis_RunII

#git cms-init
git cms-addpkg RecoJets/JetProducers
git remote add -f PUJetId https://github.com/jbrands/cmssw.git
git checkout PUJetId/pileupJetId76X -b pileupJetId76X
cd RecoJets/JetProducers/data/
wget https://github.com/jbrands/RecoJets-JetProducers/raw/3dad903ed25d025f68be94d6f781ca957d6f86ac/pileupJetId_76x_Eta0to2p5_BDT.weights.xml.gz
wget https://github.com/jbrands/RecoJets-JetProducers/raw/3dad903ed25d025f68be94d6f781ca957d6f86ac/pileupJetId_76x_Eta2p5to2p75_BDT.weights.xml.gz
wget https://github.com/jbrands/RecoJets-JetProducers/raw/3dad903ed25d025f68be94d6f781ca957d6f86ac/pileupJetId_76x_Eta2p75to3_BDT.weights.xml.gz
wget https://github.com/jbrands/RecoJets-JetProducers/raw/3dad903ed25d025f68be94d6f781ca957d6f86ac/pileupJetId_76x_Eta3to5_BDT.weights.xml.gz







set up guide for version 7.4.14.v1-patch1
++++++++++++++++++++++++++++++++++

   git clone https://github.com/ptan66/Analysis_RunII
git checkout 7.4.14.v1









electron ID
+++++++++++

Oct. 08, 2015: https://twiki.cern.ch/twiki/bin/view/CMS/CutBasedElectronIdentificationRun2




useful commands:
================

copy file over, no matter where it is located, 
---------------------------------------------

xrdcp root://cmsxrootd-site.fnal.gov//store/mc/RunIISpring15DR74/DYJetsToLL_M-50_TuneCUETP8M1_13TeV-amcatnloFXFX-pythia8/AODSIM/Asympt25ns_MCRUN2_74_V9-v3/10000/002F7FDD-BA13-E511-AA63-0026189437F5.root .


json file location:
------------------

/afs/cern.ch/cms/CAF/CMSCOMM/COMM_DQM/certification/Collisions15/13TeV/


luminosity calculation:
----------------------

commands:

setenv PATH $HOME/.local/bin:/afs/cern.ch/cms/lumi/brilconda-1.0.3/bin:$PATH
pip uninstall -y brilws
pip install --install-option="--prefix=$HOME/.local" brilws



version of software: brilconda-1.0.3

example command:
brilcalc lumi --normtag /afs/cern.ch/user/c/cmsbril/public/normtag_json/OfflineNormtagV1.json  --byls switch -u /pb -i [JSON from running over the PD]

--hltpath HLTPATH

HLTPATH is hlt path name or pattern. The string pattern uses the file system convention fnmatch. *, ? ,[seq], [!seq] operators are recognised. In order not to confuse with the file system, please double quote the hltpath string if there are special char *, ?, [] !


triggers:

HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_DZ_v* (e.g., v1 for MC; v2 for data)
HLT_Mu17_TrkIsoVVL_TkMu8_TrkIsoVVL_v*

HLT_Ele17_Ele12_CaloIdL_TrackIdL_IsoVL_DZ_v*


JEC:

MC:   74X_mcRun2_asymptotic_v2
Data: 74X_dataRun2_Prompt_v4

MET fitlers:

•  at least one good PV
•  HBHENoiseFilter loose
•  HBHEIsoNoiseFilter
•  eeBadScFilter
•  CSCTightHalo2015Filter

Pile Up
=======

01/06/2016, generate pileup files using command as below:

pileupCalc.py -i /afs/cern.ch/cms/CAF/CMSCOMM/COMM_DQM/certification/Collisions15/13TeV/Cert_246908-260627_13TeV_PromptReco_Collisions15_25ns_JSON_Silver_v2.txt --inputLumiJSON /afs/cern.ch/cms/CAF/CMSCOMM/COMM_DQM/certification/Collisions15/13TeV/PileUp/pileup_latest.txt --calcMode true --minBiasXsec 69000 --maxPileupBin 52 --numPileupBins 52 pileup_2015.root


location of pile up
-------------------

/afs/cern.ch/cms/CAF/CMSCOMM/COMM_DQM/certification/Collisions15/13TeV/PileUp/pileup_latest.txt

json file location:
------------------

/afs/cern.ch/cms/CAF/CMSCOMM/COMM_DQM/certification/Collisions15/13TeV/

pile up calculation

pileupCalc.py -i 
Cert_246908-258750_13TeV_PromptReco_Collisions15_25ns_JSON.txt 
--inputLumiJSON 
/afs/cern.ch/cms/CAF/CMSCOMM/COMM_DQM/certification/Collisions15/13TeV/PileUp/pileup_latest.txt
--calcMode true --minBiasXsec 80000 --maxPileupBin 52 --numPileupBins 52 
myhist.root

from Jiyeon
  I used the information of this link for my pileup calculation :
https://twiki.cern.ch/twiki/bin/viewauth/CMS/PileupJSONFileforData
(pileupCalc.py -i MyAnalysisJSON.txt --inputLumiJSON 
pileup_JSON_2011_4_2_validation.txt --calcMode true --minBiasXsec 69400 
--maxPileupBin 50 --numPileupBins 50 MyDataPileupHistogram.root)

Especially, I used the section of "Calculating Your Pileup Distribution".
with '--minBiasXsec = 73500' which is default value in CMSSW74x release.



Daily logs:
==========


Dec. 21, 2015
+++++++++++++




Dec. 03, 2015
+++++++++++++

long time no see, 



Nov. 06, 2015
+++++++++++++
tested over data/MC data sample, crab submission. Basic electron/muon IDs are 
implemented and tested to first order. Addtional work on the jet collections, etc. 




Oct. 22, 2015
+++++++++++++

implemented cut-based electron ID, and code was tested to run on MC simulation



Oct. 19, 2015
+++++++++++++

move back to the analyzer. continue 



Oct. 07, 2015
+++++++++++++

first test with MC samples, check the configration file "test.py"
essentially need check from all basic collections to be copied over, and 
root dictionary error as well. Good luck tomorrow!



Oct. 06, 2015
+++++++++++++

have code compiled in 7_4_14; first commit back to CVS




Oct. 05, 2015
+++++++++++++

Start porting code in 53x release to 74x releases.

Release: CMSSW_7_4_14; slc6_amd64_gcc491
Global tag:  MCRUN2_74_V9 (74x 25ns MC)

access the jet ID value map for jet ID related variables
 InputJetIDValueMap         = cms.InputTag("ak4JetID"), 

!!!!! need check for missing hits for track/electronID/electron MVA id/cocktail muon/





email from Ilya regarding electron ID
+++++++++++++++++++++++++++++++++++++


  As part of my EGM work, I am providing a set of demos for electron and photon usage
for all PAGs. Specifically for 25ns Spring15 samples, for the approved cut-based electron ID:

My example demo ntupler (note that it runs universally on AOD and miniAOD):
with full cut-based ID:
   https://github.com/ikrav/EgammaWork/blob/ntupler_and_VID_demos_7.4.12/ElectronNtupler/plugins/ElectronNtuplerVIDDemo.cc
just ntupler, no EGM ID embedded:
   https://github.com/ikrav/EgammaWork/blob/ntupler_and_VID_demos_7.4.12/ElectronNtupler/plugins/SimpleElectronNtupler.cc

The matching configs for cmsRun, respectively:
   https://github.com/ikrav/EgammaWork/blob/ntupler_and_VID_demos_7.4.12/ElectronNtupler/test/runElectrons_VID_CutBased_Spring15_25ns_demo.py
and
   https://github.com/ikrav/EgammaWork/blob/ntupler_and_VID_demos_7.4.12/ElectronNtupler/test/runElectrons.py

In both of the above you will find exactly the objects from the AOD and miniAOD
event record (electron collection names, etc) in the python configuration for the ntupler.

If you’d like to read more about these examples where I explain what line does what,
and the advice on using the EGM-certified ID, it is here: 
   https://twiki.cern.ch/twiki/bin/view/CMS/CutBasedElectronIdentificationRun2#Working_points_for_Spring15_MC_s
(see “Recipes for regular user for 7.4.12+”).

You can pull the whole example (after setting up the release and doing cms-merge-topic with 
the IDs code, if you plan to use it) as
  … you are in CMSSW_7_4_12/src/
  git clone https://github.com/ikrav/EgammaWork.git
  cd EgammaWork
  git checkout ntupler_and_VID_demos_7.4.12
  scram build

Let me know if you have questions.
Regards,
Ilya